{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ntb-workout\\\\front\\\\pages\\\\profile.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport Head from \"next/head\";\nimport AppLayout from \"../components/AppLayout\";\nimport { Chart as ChartJS } from \"chart.js/auto\"; // Import necessary Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  const chartRef = useRef(null); // Create a reference to the canvas element\n\n  useEffect(() => {\n    const ctx = chartRef.current.getContext(\"2d\");\n    const chart = new ChartJS(ctx, {\n      type: \"radar\",\n      // Set chart type to 'radar' for a radial chart\n      data: {\n        labels: [\"Data 1\", \"Data 2\", \"Data 3\", \"Data 4\", \"Data 5\"],\n        datasets: [{\n          label: \"My Dataset\",\n          fill: true,\n          // Optionally fill the chart area\n          backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n          // Background color with transparency\n          borderColor: \"rgba(255, 99, 132, 1)\",\n          // Border color\n          pointBorderColor: \"rgba(255, 99, 132, 1)\",\n          // Point border color\n          pointBackgroundColor: \"rgba(255, 99, 132, 1)\",\n          // Point background color\n          pointBorderWidth: 1,\n          pointRadius: 5,\n          pointHoverRadius: 10,\n          // Increase hover radius for better interaction\n          data: [65, 59, 80, 81, 56] // Replace with your actual data\n        }]\n      },\n      options: {\n        // Customize chart options (adjust as needed)\n        scale: {\n          pointLabels: {\n            fontSize: 14 // Adjust font size for point labels\n          },\n          angleLines: {\n            display: true // Optionally display angle lines\n          },\n          gridLines: {\n            circular: true // Circular grid lines for the radial shape\n          }\n        }\n      }\n    });\n\n    // Cleanup function (optional, to avoid memory leaks)\n    return () => {\n      chart.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"NTB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"myChart\",\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\nexport default Profile;","map":{"version":3,"names":["React","useEffect","useRef","Head","AppLayout","Chart","ChartJS","jsxDEV","_jsxDEV","Profile","chartRef","ctx","current","getContext","chart","type","data","labels","datasets","label","fill","backgroundColor","borderColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointRadius","pointHoverRadius","options","scale","pointLabels","fontSize","angleLines","display","gridLines","circular","destroy","children","fileName","_jsxFileName","lineNumber","columnNumber","id","ref"],"sources":["D:/Project/ntb-workout/front/pages/profile.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport Head from \"next/head\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport { Chart as ChartJS } from \"chart.js/auto\"; // Import necessary Chart.js components\r\n\r\nconst Profile = () => {\r\n  const chartRef = useRef(null); // Create a reference to the canvas element\r\n\r\n  useEffect(() => {\r\n    const ctx = chartRef.current.getContext(\"2d\");\r\n    const chart = new ChartJS(ctx, {\r\n      type: \"radar\", // Set chart type to 'radar' for a radial chart\r\n      data: {\r\n        labels: [\"Data 1\", \"Data 2\", \"Data 3\", \"Data 4\", \"Data 5\"],\r\n        datasets: [\r\n          {\r\n            label: \"My Dataset\",\r\n            fill: true, // Optionally fill the chart area\r\n            backgroundColor: \"rgba(255, 99, 132, 0.2)\", // Background color with transparency\r\n            borderColor: \"rgba(255, 99, 132, 1)\", // Border color\r\n            pointBorderColor: \"rgba(255, 99, 132, 1)\", // Point border color\r\n            pointBackgroundColor: \"rgba(255, 99, 132, 1)\", // Point background color\r\n            pointBorderWidth: 1,\r\n            pointRadius: 5,\r\n            pointHoverRadius: 10, // Increase hover radius for better interaction\r\n            data: [65, 59, 80, 81, 56], // Replace with your actual data\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        // Customize chart options (adjust as needed)\r\n        scale: {\r\n          pointLabels: {\r\n            fontSize: 14, // Adjust font size for point labels\r\n          },\r\n          angleLines: {\r\n            display: true, // Optionally display angle lines\r\n          },\r\n          gridLines: {\r\n            circular: true, // Circular grid lines for the radial shape\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    // Cleanup function (optional, to avoid memory leaks)\r\n    return () => {\r\n      chart.destroy();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>NTB</title>\r\n      </Head>\r\n      <div>\r\n        <canvas id=\"myChart\" ref={chartRef} /> {/* Assign the reference */}\r\n      </div>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,KAAK,IAAIC,OAAO,QAAQ,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE/BD,SAAS,CAAC,MAAM;IACd,MAAMU,GAAG,GAAGD,QAAQ,CAACE,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IAC7C,MAAMC,KAAK,GAAG,IAAIR,OAAO,CAACK,GAAG,EAAE;MAC7BI,IAAI,EAAE,OAAO;MAAE;MACfC,IAAI,EAAE;QACJC,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;QAC1DC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,YAAY;UACnBC,IAAI,EAAE,IAAI;UAAE;UACZC,eAAe,EAAE,yBAAyB;UAAE;UAC5CC,WAAW,EAAE,uBAAuB;UAAE;UACtCC,gBAAgB,EAAE,uBAAuB;UAAE;UAC3CC,oBAAoB,EAAE,uBAAuB;UAAE;UAC/CC,gBAAgB,EAAE,CAAC;UACnBC,WAAW,EAAE,CAAC;UACdC,gBAAgB,EAAE,EAAE;UAAE;UACtBX,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAE;QAC9B,CAAC;MAEL,CAAC;MACDY,OAAO,EAAE;QACP;QACAC,KAAK,EAAE;UACLC,WAAW,EAAE;YACXC,QAAQ,EAAE,EAAE,CAAE;UAChB,CAAC;UACDC,UAAU,EAAE;YACVC,OAAO,EAAE,IAAI,CAAE;UACjB,CAAC;UACDC,SAAS,EAAE;YACTC,QAAQ,EAAE,IAAI,CAAE;UAClB;QACF;MACF;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXrB,KAAK,CAACsB,OAAO,CAAC,CAAC;IACjB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE5B,OAAA,CAACJ,SAAS;IAAAiC,QAAA,gBACR7B,OAAA,CAACL,IAAI;MAAAkC,QAAA,eACH7B,OAAA;QAAA6B,QAAA;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACPjC,OAAA;MAAA6B,QAAA,gBACE7B,OAAA;QAAQkC,EAAE,EAAC,SAAS;QAACC,GAAG,EAAEjC;MAAS;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAED,eAAehC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}